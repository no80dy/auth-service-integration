version: '3'
services:
  etl:
    build:
      context: movie_service/etl
      dockerfile: Dockerfile-etl
    env_file:
      - movie_service/etl/etl.env
    depends_on:
      - db
      - elastic
      - movie_service_fastapi
    volumes:
      - ./movie_service/etl:/app/etl

  redis:
    image: docker.io/bitnami/redis:7.2.1
    environment:
      - ALLOW_EMPTY_PASSWORD=yes  # для прода данный параметр удалить
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:  # TODO: после отладки убрать порты
      - "6379:6379"

  db:  # TODO: необходимо будет создавать две БД в рамках одного инстанса
    build:
      context: movie_service
      dockerfile: Dockerfile-db
    env_file:
      - movie_service/.env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123qwe
      - POSTGRES_DB=movies_database
    volumes:
      - pgdata:/var/lib/postgresql/data

  elastic:
    image: elasticsearch:8.6.2
    environment:
      - "ES_JAVA_OPTS=-Xms200m -Xmx200m"
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"  # для прода данный параметр удалить
    ports:
      - "9200:9200"  # необходимо для ETL в рамках разработки

  movie_service_fastapi:
    build: movie_service/src
    env_file:
      - movie_service/fastapi.env
    depends_on:
      - elastic
      - redis
      - auth_service_fastapi
    ports:
      - "8002:8002"

#  nginx:
#    image: nginx:1.19.2
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#      - ./nginx/conf.d:/etc/nginx/conf.d:ro
#
#    depends_on:
#      - movie_service_fastapi
#      - auth_service_fastapi
#    ports:
#      - "80:80"



  django:
    build: admin_panel_service/movies_admin
    env_file:
      - admin_panel_service/.env
    ports:
      - "8001:8001"
    depends_on:
      - db

  auth_service_fastapi:
    build:
      context: auth_service/src
      dockerfile: Dockerfile
    env_file:
      - auth_service/fastapi.env
    volumes:
      - ./auth_service/src/alembic/versions:/app/alembic/versions
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"

volumes:
  pgdata:
